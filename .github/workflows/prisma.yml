# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow that checks for security issues using
# the Prisma Cloud Infrastructure as Code Scan Action on
# the IaC files present in the repository.
# The results are uploaded to GitHub Security Code Scanning
#
# For more details on the Action configuration see https://github.com/prisma-cloud-shiftleft/iac-scan-action

name: Prisma Cloud IaC Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '35 4 * * 5'

permissions:
  contents: read

jobs:
  prisma_cloud_iac_scan:
    permissions:
      contents: read  # for actions/checkout to fetch code
      security-events: write  # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read  # required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    name: Run Prisma Cloud IaC Scan to check
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      # Run Prisma Cloud IaC Scan
      - name: Run Prisma Cloud IaC Scan
        id: prisma-cloud
        uses: prisma-cloud-shiftleft/iac-scan-action@<version>  # Replace <version> with the latest version or commit hash
        with:
          prisma_api_url: https://api.prismacloud.io  # Ensure the URL is correct for your region
          access_key: ${{ secrets.PRISMA_ACCESS_KEY }}  # Your Prisma Cloud access key from GitHub Secrets
          secret_key: ${{ secrets.PRISMA_SECRET_KEY }}  # Your Prisma Cloud secret key from GitHub Secrets
          asset_name: 'my-asset-name'  # Name of the asset you're scanning
          template_type: 'CFT'  # Change if scanning Terraform or other IaC types
          scan_path: ./  # Directory where your IaC files are located
          result_path: ./prismacloud_iac  # Where to save the scan results
